"""Make skill relationships many-to-many

Revision ID: 1725571852
Revises: 1725571705
Create Date: 2024-09-05 14:30:53.459785

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1725571852'
down_revision: Union[str, None] = '1725571705'
branch_labels: Union[str, Sequence[str], None] = ()
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role_behavioral_skill',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.skill_id'], ),
    sa.PrimaryKeyConstraint('role_id', 'skill_id')
    )
    op.create_table('role_hard_skill',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.skill_id'], ),
    sa.PrimaryKeyConstraint('role_id', 'skill_id')
    )
    op.create_table('role_soft_skill',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.skill_id'], ),
    sa.PrimaryKeyConstraint('role_id', 'skill_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('role_soft_skill')
    op.drop_table('role_hard_skill')
    op.drop_table('role_behavioral_skill')
    # ### end Alembic commands ###
