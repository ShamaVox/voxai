"""Add new tables

Revision ID: 1714516915
Revises: 1714516658
Create Date: 2024-04-30 22:41:55.228117

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision: str = '1714516915'
down_revision: Union[str, None] = '1714516658'
branch_labels: Union[str, Sequence[str], None] = ()
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'account', ['account_id'])
    op.create_unique_constraint(None, 'skill', ['skill_id'])
    op.create_table('candidate',
    sa.Column('candidate_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('candidate_name', sa.String(), nullable=False),
    sa.Column('current_company', sa.String(), nullable=True),
    sa.Column('interview_stage', sa.Integer(), nullable=True),
    sa.Column('resume_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('candidate_id'),
    sa.UniqueConstraint('candidate_id')
    )
    op.create_table('role',
    sa.Column('role_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.String(), nullable=False),
    sa.Column('base_compensation_min', sa.Integer(), nullable=True),
    sa.Column('base_compensation_max', sa.Integer(), nullable=True),
    sa.Column('target_compensation', sa.Integer(), nullable=True),
    sa.Column('experience_level', sa.Integer(), nullable=True),
    sa.Column('years_of_experience_min', sa.Integer(), nullable=True),
    sa.Column('years_of_experience_max', sa.Integer(), nullable=True),
    sa.Column('target_years_of_experience', sa.Integer(), nullable=True),
    sa.Column('direct_manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['direct_manager_id'], ['account.account_id'], ),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('role_id')
    )
    op.create_table('application',
    sa.Column('application_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('candidate_email', sa.String(), nullable=False),
    sa.Column('candidate_match', sa.Integer(), nullable=True),
    sa.Column('application_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_email'], ['account.email'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.PrimaryKeyConstraint('application_id'),
    sa.UniqueConstraint('application_id'),
    sa.UniqueConstraint('role_id', 'candidate_email', name='unique_role_candidate')
    )
    op.create_table('role_skill',
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.skill_id'], )
    )
    op.create_table('role_teammate',
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('teammate_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.ForeignKeyConstraint(['teammate_id'], ['account.account_id'], )
    )
    op.create_table('interview',
    sa.Column('interview_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('interview_time', sa.DateTime(), nullable=False),
    sa.Column('stage', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('audio_url', sa.String(), nullable=True),
    sa.Column('video_url', sa.String(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('engagement', sa.Integer(), nullable=True),
    sa.Column('sentiment', sa.Integer(), nullable=True),
    sa.Column('keywords', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('under_review', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['application.application_id'], ),
    sa.PrimaryKeyConstraint('interview_id'),
    sa.UniqueConstraint('interview_id')
    )
    op.create_table('interview_interviewer',
    sa.Column('interview_id', sa.Integer(), nullable=True),
    sa.Column('interviewer_email', sa.String(), nullable=True),
    sa.Column('candidate_score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['interview_id'], ['interview.interview_id'], ),
    sa.ForeignKeyConstraint(['interviewer_email'], ['account.email'], )
    )
    op.create_table('interview_skill_score',
    sa.Column('interview_id', sa.Integer(), nullable=True),
    sa.Column('skill_name', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['interview_id'], ['interview.interview_id'], ),
    sa.ForeignKeyConstraint(['skill_name'], ['skill.skill_id'], )
    )
    op.create_table('interview_speaking',
    sa.Column('interview_id', sa.Integer(), nullable=True),
    sa.Column('interviewer_id', sa.Integer(), nullable=True),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('speaking_time', sa.Integer(), nullable=True),
    sa.Column('wpm', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate.candidate_id'], ),
    sa.ForeignKeyConstraint(['interview_id'], ['interview.interview_id'], ),
    sa.ForeignKeyConstraint(['interviewer_id'], ['account.account_id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'skill', type_='unique')
    op.drop_constraint(None, 'account', type_='unique')
    op.drop_table('interview_speaking')
    op.drop_table('interview_skill_score')
    op.drop_table('interview_interviewer')
    op.drop_table('interview')
    op.drop_table('role_teammate')
    op.drop_table('role_skill')
    op.drop_table('application')
    op.drop_table('role')
    op.drop_table('candidate')
    # ### end Alembic commands ###
