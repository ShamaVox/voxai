"""Add new primary key account_id to Account and add Skill table

Revision ID: 1714516658
Revises: 1713379677
Create Date: 2024-04-30 22:37:38.537253

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision: str = '1714516658'
down_revision: Union[str, None] = '1713379677'
branch_labels: Union[str, Sequence[str], None] = ()
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('skill',
    sa.Column('skill_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('skill_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('skill_id'),
    sa.UniqueConstraint('skill_name')
    )
    op.add_column('account', sa.Column('account_id', sa.Integer(), autoincrement=True, nullable=True))
    # Get the connection and metadata
    connection = op.get_bind()
    metadata = sa.MetaData(bind=connection)

    # Reflect the existing Account table
    account_table = sa.Table('account', metadata, autoload=True)

    # Create a sequence for generating unique IDs
    op.execute(sa.schema.CreateSequence(sa.Sequence('account_id_seq')))

    # Update existing accounts with unique IDs
    for account in connection.execute(sa.select(account_table.c.email)):
        email = account.email
        # Get the next ID from the sequence
        new_id = connection.execute(sa.sequence.next_value('account_id_seq')).scalar()
        # Update the account with the new ID
        connection.execute(
            sa.update(account_table).
            where(account_table.c.email == email).
            values(account_id=new_id)
        )

    # Set the account_id column as the primary key
    op.alter_column('account', 'account_id', nullable=False, primary_key=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('account', 'account_id')
    op.drop_table('skill')
    # ### end Alembic commands ###
